//------------------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: DoC_textfile_decrypted.bt
//   Authors: Surihix
//   Version: 1.1
//   Purpose: Parse Dirge Of Cerberus's decrypted text files
//  Category: Dirge Cerberus text files
// File Mask: *.bin
//  ID Bytes: 01 00 00 00 00 00 00 00
//   History: 
//   1.0   2023-11-21 Surihix: Initial version
//   1.1   2025-01-08 Surihix: Updated offsets
//------------------------------------------------------------

LittleEndian();

typedef struct HEADER
{
    uint32 seedValueA<bgcolor=cDkGreen>;
    uint32 seedValueB<bgcolor=cDkGreen>;
    uint16 lineCount<bgcolor=cDkGreen>;
    ubyte reserved<bgcolor=cBlack>;
    ubyte cmpFlag<bgcolor=cDkGreen, comment="1 = compressed & 0 = decompressed">;
    uint32 decTxtSnippetSize<bgcolor=cDkGreen, comment="size of the decrypted text snippet at the end of the file">;
    uint32 dcmpBodySectionSize<bgcolor=cDkGreen>;
    uint32 fileSize<bgcolor=cDkGreen>;    
}Header;


typedef struct HEADERFOOTER
{
    uint32 headerSize<bgcolor=cDkGreen, comment="always 24">;
    uint32 headerChecksumValue<bgcolor=cDkGreen, comment="sum of all 4th byte values from the 0th byte">;
}HeaderFooter;


typedef struct BODYFOOTER
{
    uint32 bodySize<bgcolor=0xbf6b6c>;
    uint32 bodyChecksumValue<bgcolor=0xbf6b6c, comment="sum of all 4th byte values from the body's 0th byte">;
}BodyFooter;


struct FILE
{
    uint64 encMagic<hidden=true>;   
    Assert(encMagic == 10733845617377775685 || encMagic == 1);

    if(encMagic == 10733845617377775685)
    {
       Printf("Warning: File is encrypted.\nThe template won't show any results");
    }

    if(encMagic == 1) 
    {
       FSeek(0);
       Header headerOffsets<name="Header Section", open=true>;
       HeaderFooter headerFooterOffsets<name="Header Footer Section">;
       
       local uint64 fileSize = FileSize();
       local uint64 decTxtSnippetOffset = fileSize - headerOffsets.decTxtSnippetSize;
       local uint64 bodySize = (decTxtSnippetOffset - 32) - 8;
       
       FSeek(32);
       ubyte bodyData[bodySize]<bgcolor=0xbf6b6c>;

       FSeek(decTxtSnippetOffset - 8);
       BodyFooter bodyFooterOffsets<name="Body Footer Section">;

       FSeek(decTxtSnippetOffset);
       char decTxtSnippet[headerOffsets.decTxtSnippetSize]<bgcolor=0x41446c, comment="decrypted Text Snippet">;              
    }
}File<open=true, name="DoCTextFile">;